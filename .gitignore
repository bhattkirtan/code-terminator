# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is generally recommended to not include .idea/ in version control as it
#  contains user-specific configurations.
.idea/

# VS Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk

# Linux
*~

# temporary files which can be created if a process still has a handle open of a deleted file
.fuse_hidden*

# KDE directory preferences
.directory

# Linux trash folder which might appear on any partition or disk
.Trash-*

# .nfs files are created when an open file is removed but is still being accessed
.nfs*

# Project-specific ignores

# Carbon tracking reports and logs
carbon_*.json
carbon_monitoring_report_*.json
carbon_session_report_*.json
*.carbon

# AI/ML model files and data
*.model
*.pkl
*.pickle
*.h5
*.hdf5
*.onnx
*.pb
*.pth
*.pt
*.safetensors

# Large data files
*.csv
*.json.gz
*.parquet
*.feather
*.arrow

# Temporary files from accuracy validation
temp_*
/tmp/
accuracy_validation_*/
screenshot_*.png
difference_heatmap_*.png
*_components.png

# Selenium and browser automation
chromedriver*
geckodriver*
webdriver/
browser_logs/
screenshots/

# OpenAI and API keys (extra safety)
.openai
openai_key.txt
api_keys.txt
secrets.json
credentials.json

# LLM and AI service logs
llm_*.log
ai_*.log
openai_*.log

# Test output and reports
test_results/
test_reports/
accuracy_reports/
validation_*/

# Image processing and computer vision temporary files
*.tmp.png
*.tmp.jpg
*.tmp.jpeg
processed_images/
temp_images/

# Local configuration overrides
config.local.json
settings.local.json
carbon_config.local.json

# Database files
*.db
*.sqlite
*.sqlite3

# Logs
logs/
*.log
*.log.*

# Backup files
*.bak
*.backup
*~

# Temporary office files
~$*

# Compressed files (unless needed for project)
*.zip
*.tar.gz
*.rar
*.7z

# IDE specific files
*.swp
*.swo
*~

# Node.js (if any frontend components)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Azure and cloud deployment files (if used)
.azure/
azure.json
deploy.json

# Docker files (if used)
docker-compose.override.yml
.dockerignore

# Kubernetes files (if used)
*.kubeconfig
k8s-secrets/

# Terraform files (if used)
*.tfstate
*.tfstate.backup
.terraform/
terraform.tfvars

# Local environment and secrets
.env.local
.env.development.local
.env.test.local
.env.production.local

# Cache directories
.cache/
cache/
tmp/

# Performance monitoring and profiling
*.prof
*.profile
profiling_results/

# Machine learning experiment tracking
mlruns/
wandb/
tensorboard_logs/
experiments/

# Jupyter notebook checkpoints and outputs
.ipynb_checkpoints/
*.ipynb

# Data science and analysis files
*.npy
*.npz
data/
datasets/
raw_data/
processed_data/

# Configuration files with sensitive data
*secret*
*password*
*token*
*key*
!example_*

# Build artifacts
build/
dist/
*.egg-info/

# Generated documentation
docs/_build/
site/

# Coverage reports
.coverage
coverage.xml
htmlcov/

# Pytest
.pytest_cache/

# Local development files
dev_*
local_*
debug_*

# Editor backup files
*~
*.swp
*.swo
.#*
\#*#

# Project-specific temporary files
skadoosh_temp/
validation_temp/
test_temp/

# Large binary files that shouldn't be in git
*.bin
*.dat
*.dump

# Miscellaneous
.DS_Store